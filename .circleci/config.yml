version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@6.5.0

jobs:
  build_tomcat_push_jar:
    working_directory: ~/ausseabed-processing-pipeline
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: circleci-tomcat-push-{{ checksum "./geoserver/ausseabed.pipeline/pom.xml" }}
      - run:
          working_directory: ./geoserver/ausseabed.pipeline/
          command: mvn dependency:go-offline # gets the project dependencies
      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: circleci-tomcat-push-{{ checksum "./geoserver/ausseabed.pipeline/pom.xml" }}
      - run:
          working_directory: ./geoserver/ausseabed.pipeline/
          command: mvn package
      - store_artifacts:
          path: ./geoserver/ausseabed.pipeline/target/ausseabed.pipeline-1.0-SNAPSHOT.jar
      - persist_to_workspace:
          root: ./geoserver/ausseabed.pipeline/target
          paths:
            - ausseabed.pipeline-1.0-SNAPSHOT.jar
            - lib/jackson*.jar
            - lib/jul*.jar
  build_and_push_kartoza:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - run:
          name: Download kartoza/geoserver
          command: git clone --branch tomcat_upgrade_issue_165 git://github.com/ausseabed/docker-geoserver
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          checkout: false
          create-repo: false
          dockerfile: ./docker-geoserver/Dockerfile
          path: ./docker-geoserver/
          extra-build-args: "--build-arg GS_VERSION=2.17.1 --build-arg IMAGE_VERSION=9-jdk11-buster --build-arg JAVA_HOME=/usr/lib/jvm/java-11-amazon-buster"
          region: AWS_REGION_ENV_VAR_NAME
          repo: "ausseabed-kartoza-geoserver"
          tag: "9-jdk11-corretto-2.17.1"
  build_and_push_geoserver_image:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - attach_workspace:
          at: ./geoserver/ausseabed.pipeline/target/
      - run:
          name: Check Scripts
          command: find .
      - aws-ecr/build-and-push-image:
          account-url: AWS_ECR_ACCOUNT_URL_ENV_VAR_NAME
          #         aws-access-key-id: ACCESS_KEY_ID_ENV_VAR_NAME
          #         aws-secret-access-key: SECRET_ACCESS_KEY_ENV_VAR_NAME
          create-repo: false
          dockerfile: ./geoserver/Dockerfile
          path: ./geoserver/
          checkout: false
          region: AWS_REGION_ENV_VAR_NAME
          repo: ausseabed-geoserver
          extra-build-args: "--build-arg COMMUNITY_EXTENSIONS=gwc-s3-plugin --build-arg GS_VERSION=2.17.1"
          #tag: 'ausseabed-geoserver-2.16.2'

workflows:
  update_infra_and_application:
    jobs:
      - build_tomcat_push_jar:
          filters:
            branches:
              only:
                - master
                - /.*NGA-388.*/
      - build_and_push_kartoza:
          filters:
            branches:
              only:
                - /.*build_and_push_kartoza.*/
      - build_and_push_geoserver_image:
          filters:
            branches:
              only:
                - master
                - /.*NGA-388.*/
          requires:
            - build_tomcat_push_jar
